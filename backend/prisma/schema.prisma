generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Deployment {
  id        String   @id @default(cuid())
  repoUrl   String?
  domain    String?
  status    Status   @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     AgentTask[]
  diagnoses Diagnosis[]
  @@map("deployments")
}

model AgentTask {
  id           String   @id @default(cuid())
  deploymentId String
  deployment   Deployment @relation(fields: [deploymentId], references: [id])
  agentName    String
  taskName     String
  status       Status   @default(PENDING)
  attempts     Int      @default(0)
  input        Json?
  output       Json?
  startedAt    DateTime?
  completedAt  DateTime?
  logs         Log[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@map("agent_tasks")
}

model Log {
  id          String   @id @default(cuid())
  agentTaskId String
  agentTask   AgentTask @relation(fields: [agentTaskId], references: [id])
  type        LogLevel @default(INFO)
  message     String   @db.Text
  timestamp   DateTime @default(now())
  @@map("logs")
}

model Diagnosis {
  id                  String   @id @default(cuid())
  deploymentId        String
  deployment          Deployment @relation(fields: [deploymentId], references: [id])
  errorLog            String   @db.Text
  rootCause           String   @db.Text
  suggestion          String   @db.Text
  retrievedContextIds String[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  @@map("diagnoses")
}

enum Status {
  PENDING
  IN_PROGRESS
  SUCCESS
  FAILED
  REQUIRES_MANUAL_ACTION
}

enum LogLevel {
  INFO
  ERROR
  DEBUG
  SYSTEM
}